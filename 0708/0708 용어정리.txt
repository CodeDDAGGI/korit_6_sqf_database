전역 변수
@@ - 시스템 변수를 참조

-- autucommit 트랜잭션의 자동 커밋 설정을 나타내는 변수
1: 자동 커밋이 활성화되어 있음을 나타냅니다.(참)
0: 자동 커밋이 비활성화되어 있음을 나타냅니다.(거짓)
#껏다키면 자동으로 autocomit이 1이 되어있음

사용자 변수 설정
set @변수명 = 할당할 값

트랜잭션

start transaction - 트랜잭션을 시작하는 sql문

savepoint - 트랜잭션 내에서 중간지점을 설정 
( 세이브 포인트 설정 시 해당 지점까지의 sql문들이 실행된 상태를 기억)

rollback - 트랜잭션을 취소하고 이전 상태로 되돌림 
( 'rollback'만 실행 시 모든 변경사항을 취소하고 데이터베이스는 이전상태로 복원)

지정한 구역 이전으로 롤백할 경우
rollback to '해당 세이브 포인트'

limit - 결과 집합의 반환된 행 수를 제한하는데 사용 
ex) limit(offset , count)
offset : 시작 위치를 나타냄
count : 반환할 행의 개수를 나타냄

view 가상 테이블
문법
create view "가상 테이블 명" as
※테이블 참조, 테이블 컬럼 생성은 동일

트리거
BEGIN == { 여는 구문

END == } 닫는 구문

1)Before Insert (삽입 전 트리거)
새로운 행(row)이 삽입되기 전에 실행됩니다
예시 : 새로운 고객이 삽입될 때, 해당 고객의 등록일을 설정하는 트리거를 생성하는 경우
(새로운 고객이 등록되기전에 등록일 먼저 등록된 후 새 고객 등록)

2)After Insert (삽입 후 트리거)
트리거는 새로운 행이 삽입된 후에 실행됩니다
예시 : 새로운 주문이 삽입될 때, 해당 주문에 대한 로그를 기록하는 트리거를 생성하는 경우
(주문이 삽입된 후 트리거 작동)

3)Before Update (업데이트 전 트리거)
트리거는 행이 업데이트되기 전에 실행됩니다.
업데이트되는 데이터를 검증하거나 변경할 필요가 있을 때 사용됩니다.
예시 : 고객 정보가 업데이트될 때, 이메일 주소의 유효성을 검사하는 트리거를 생성하는 경우

4) After Update (업데이트 후 트리거)
트리거는 행이 업데이트된 후에 실행됩니다. 
업데이트된 데이터를 기반으로 추가 작업을 수행하거나 로깅을 남기는 등의 용도
예시: 고객 정보가 업데이트될 때, 해당 고객의 정보를 변경 로그에 기록하는 트리거를 생성하는 경우

5) Before Delete (삭제 전 트리거)
BEFORE DELETE 트리거는 행이 삭제되기 전에 실행됩니다.
삭제 조건을 검증하거나 관련된 데이터를 사전에 처리할 수 있습니다.
예시: 고객 정보가 삭제될 때, 해당 고객의 주문 데이터를 삭제하는 트리거를 생성하는 경우

6) After Delete (삭제 후 트리거)
트리거는 행이 삭제된 후에 실행됩니다. 
삭제된 데이터를 기반으로 추가 작업을 수행하거나 로깅을 남기는 등의 용도로 사용됩니다.
고객 정보가 삭제될 때, 해당 고객의 정보를 삭제 로그에 기록하는 트리거를 생성하는 경우

프로시저
데이터베이스에서 여러 SQL 문을 하나의 단위로 묶어서 실행할 수 있는 저장 프로그램
데이터베이스에 저장되어 있으며 필요할 때마다 호출하여 실행
주요 특징
재사용성
단위성
매개변수
트랜잭션

프로시저에서 매개변수 정의할때 사용하는 키워드
in - 프로시저 호출 시 외부에서 데이터를 전달받아 프로시저 내부에서 읽기만 가능한 매개변수
       주로 입력 매개변수로 사용되며, 호출자가 전달한 값은 프로시저 내에서 변경할 수 없습니다.
       프로시저 내에서 해당 매개변수의 값은 읽기 전용으로 사용

out - 프로시저에서 생성된 데이터를 호출자에게 반환할 때 사용
          호출 시 매개변수는 초기화되며, 프로시저 내에서 값을 할당하고, 이 값은 호출자에게 반환
          	
inout - 매개변수는 호출자로부터 데이터를 받아들이고,
             프로시저 내에서 값을 변경하여 다시 호출자에게 반환할 수 있는 매개변수
             읽기와 쓰기가 모두 가능합니다.

declare - 변수를 선언할 때 사용

call - 프로시저 호출

